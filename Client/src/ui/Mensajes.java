/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import interfaces.MensajeInterface;
import interfaces.Usuario;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.Iterator;
import javax.swing.AbstractListModel;

/**
 *
 * @author abraham
 */
public class Mensajes extends javax.swing.JDialog {

    /**
     * Creates new form Mensajes
     */
    Usuario user;
    public Mensajes(java.awt.Frame parent, boolean modal, Usuario user) {
        super(parent, modal);
        this.user=user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText("");

        jLabel1.setText("Destinatario:");

        jButton1.setText("Enviar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setModel(new AbstractListModel<String>() {
            public ArrayList<MensajeInterface> getMensajes(){
                ArrayList<MensajeInterface> mensajes = new ArrayList<MensajeInterface>();
                try{

                    Iterator<MensajeInterface> msgs=user.getMensajes().iterator();
                    while(msgs.hasNext()){
                        MensajeInterface msg=msgs.next();
                        mensajes.add(msg);
                    }

                    Collections.sort(mensajes, new Comparator<MensajeInterface>() {
                        public int compare(MensajeInterface o1, MensajeInterface o2) {
                            try{
                                return o1.getFecha().compareTo(o2.getFecha());
                            }catch(Exception e){
                                return -1;
                            }

                        }
                    });
                } catch(Exception e){}
                return mensajes;
            }
            public int getSize() {
                int toret=0;
                try {
                    toret= this.getMensajes().size();
                } catch( Exception e)
                {}
                return toret;
            }
            public String getElementAt(int i) {
                String toret="";

                MensajeInterface  msg=this.getMensajes().get(this.getSize()-i-1);
                DateFormat hourFormat = new SimpleDateFormat("dd/MM HH:mm");
                try{
                    toret=msg.getRemitente()+"("+hourFormat.format(msg.getFecha())+"):"+msg.getMensaje();
                }catch(Exception e){}
                return toret;
            }

        });
        jScrollPane2.setViewportView(jList1);

        jLabel2.setText("Mensajes recibidos:");

        jButton2.setText("Refrescar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        try{
           Usuario us=user.buscarUsuario(jTextField1.getText());
        if (us==null){
            
            NoExiste d = new NoExiste(new javax.swing.JFrame(), true);
            
            d.setVisible(true);
        }
        else{
       String destinatario=jTextField1.getText();
       String remitente=this.user.getUser();
       //controlar longitud
       String mensaje=jTextArea1.getText();
               
       Date fecha= new Date (System.currentTimeMillis());
      this.user.sendMensaje(destinatario, mensaje, fecha);
        MensajeEnviado d = new MensajeEnviado(new javax.swing.JFrame(), true);
            jTextArea1.setText("");
            d.setVisible(true);
        }
        }catch(Exception e){}
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        jList1.setModel(new AbstractListModel<String>() {
    public ArrayList<MensajeInterface> getMensajes(){
        ArrayList<MensajeInterface> mensajes = new ArrayList<MensajeInterface>();
        try{

            Iterator<MensajeInterface> msgs=user.getMensajes().iterator();
            while(msgs.hasNext()){
                MensajeInterface msg=msgs.next();
                mensajes.add(msg);
            }

            Collections.sort(mensajes, new Comparator<MensajeInterface>() {
                public int compare(MensajeInterface o1, MensajeInterface o2) {
                    try{
                        return o1.getFecha().compareTo(o2.getFecha());
                    }catch(Exception e){
                        return -1;
                    }

                }
            });
        } catch(Exception e){}
        return mensajes;
    }
    public int getSize() {
        int toret=0;
        try {
            toret= this.getMensajes().size();
        } catch( Exception e)
        {}
        return toret;
    }
    public String getElementAt(int i) {
        String toret="";

        MensajeInterface  msg=this.getMensajes().get(this.getSize()-i-1);
        DateFormat hourFormat = new SimpleDateFormat("dd/MM HH:mm");
        try{
            toret=msg.getRemitente()+"("+hourFormat.format(msg.getFecha())+"):"+msg.getMensaje();
        }catch(Exception e){}
        return toret;
    }

});

    }//GEN-LAST:event_jButton2MousePressed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
